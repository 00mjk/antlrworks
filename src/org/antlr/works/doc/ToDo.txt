
* Prio 1
- GUI to ignore some tokens in the interpreter
- fix tree appearance between interpreter and debugger on Windows
- ask for string literal for T104 (Tokens artificial SD)

* Prio 2
- DFA decision for lexer tokens (see with Terence) - position in lexer grammar
- ideas: undefined rule: rename rule, delete token
- prefs: customizable list of "Insert Rule From Template" - or read from a file ?

* Prio 3:
- jump into source when navigating grammar text (in generated code)
- display current token in syntax diagram
- (Terence will change) handle "header with package" option (see with Terence for line numbering between files)
- use Grammar randomText to generate random valid input text
- lexical ambiguities (ask Terence)
- if emacs is set (in preferences), disable all conflicting menu in Linux/Windows
- jump to a definition by double-click in the syntax diagram
- problem when more than one same LT between mark/rewind
- traduire en francais en_US.stg dans /tool/templates/messages
- extract all strings into properties

* Check-list *

- version in about.properties
- version in strings.properties
- remove private menu
- optimize imports
- check update.xml file

- package for Mac OS X
- upload antlrworks.pdf

JavaC Windows Classpath example: C:\\Program Files\\Java\\jdk1.5.0_03\\bin\\javac

* Issues *

- interpreter tree doesn't display correctly (but debugger tree does)
- use "load" on Linux/Windows when opening a document on an untouched one
- tree view of TUsage: why use white spaces to be able to display the entire string ?
