
* Prio 1

- splitter should have default width on Windows/Linux
- handle out of memory when running on Windows (debugging)
- rule FloatingPointLiteral of java.g is not displayed correctly (ANTLR optimization problem)
- windows: offset of +1 when highliting tokens in debugger input pane
- windows: make background of list white on Windows/Linux

- terminer les detachable panels
- terminate "getExportableGView" method in Debugger
- test detachable panels on Windows/Linux
- do not analyze grammar when debugging in local
- dot on Windows is usually located in "c:\Program Files\ATT\Graphviz\bin\dot.exe

* Prio 2
- optimize tree drawing using incremental model (see AWTreeGraphView)
- make breakpoint in grammar and stop around this location (line, column)
- be able to search the generated grammar too
- tab and shift-tab to indent/unindent block of selected lines (like in IntelliJ)
- build and debug with custom class path and command line arguments (to launch mantra for example)
    -> the command-line argument will launch the parser with any arguments it needs (we don't care)

- create grammar file in project
- ask for string literal for T104 (Tokens artificial SD) -> nameOfExternalReferencedRule() in FAFactory
- stats on grammar (show k or inf on each decision)
- show code for any decision (Ter ads comments in code)
- from generated code, jump back to grammar

- DFA decision for lexer tokens (see with Terence) - position in lexer grammar
- prefs: customizable list of "Insert Rule From Template" - or read from a file ?
- extract all strings into properties
- jump into source when navigating grammar text (in generated code)
- display current token in syntax diagram
- handle "header with package" option (see with Terence for line numbering between files)
- lexical ambiguities (ask Terence)

* Check-list *

- version in about.properties
- version in strings.properties
- remove private menu
- optimize imports
- check update.xml file
- tests: check grammar, interpreter, debugger

- package for Mac OS X
- upload antlrworks.pdf

* Info *

Enable project document: set prefs PREF_PROJET_DOCUMENT to true
DOT: /Applications/Graphviz.app/Contents/MacOS/dot
JavaC Windows Classpath example: C:\\Program Files\\Java\\jdk1.5.0_03\\bin\\javac
SD path width: modify constants in GPath and GPathGroup

* Issues *

- jikes doesn't work from within a jar
- use "load" on Linux/Windows when opening a document on an untouched one
- tree view of TUsage: why use white spaces to be able to display the entire string ?

* Problem with syntax diagram path? *
Look into:
- GGraphGroup (where the path is created)
- FAFactory (where the optimized FA is created)
- GFactory (where everything is assembled before display)
