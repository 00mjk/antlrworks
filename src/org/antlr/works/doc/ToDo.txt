
Now:
- interpreter doesn't work anymore
- display non-consumed token if available (even after a rewind)
- problem when more than one same LT between mark/rewind
- interpreter loops when bad input (i.e. java code for SimpleGrammar)
- look at making the interpreter working for a simple grammar

- disable rename and another call to debug while debugging
- stop the debugger when closing the document

- center the text when stepping with the debugger
- can change L&F
- optimize state arround external ref (negative state should be removed - see if it is always possible)
- remove observer from notification when closing window

Test
- Windows/Linux: short-cuts, gutter position
- check copy/cut keyboard filter on Windows/Linux

Performance:
- performance of debugger (when playing all events from start to end - takes too much time)

Issues:
- TextEditorPane: wrapping doesn't always works on Mac OS X
- undo: rename + addition -> redo doesn't show "rename" but "addition"

Later:
- display LT in blue when exiting an alt (see Terence's email)
- find
- goto dialog
- show line number in gutter (via preferences and notification)
- background for stepped line like in IntelliJ (jaune clair) - handle also debugger cursor when in use
- debugger: implements input stream breakpoint
- jump to a definition by double-click in the syntax diagram
- split list between tokens (MAJ) and rules (min)
- log file (check in preferences)

Terence:
- add last state (see example of a : (A | A) B) for error paths
- problem to parse a rule when comment at the end of line without a return ?

Example of OS-sensitive button:

                if(XJApplication.isMacOS()) {
                    buttonBar.add(cancelButton, cc.xy(2, 1));
                    buttonBar.add(okButton, cc.xy(4, 1));
                } else {
                    buttonBar.add(okButton, cc.xy(2, 1));
                    buttonBar.add(cancelButton, cc.xy(4, 1));
                }
