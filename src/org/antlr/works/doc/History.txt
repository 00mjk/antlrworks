
Posted on 05/31/05
- help opens an URL
- feedback URL contains now the StringTemplate version
- don't change LAF if pop-up index didn't change when applying preferences
- remember the last break event selected (debugger)
- go to end button in debugger now run the debugger until the terminate event
- debugger/interpreter panels are made visible when running the debugger or interpreter even if the split pane is collapsed
- control-k emacs keybinding now behave as expected
- new Console (can be displayed using the Window menu)
- editor correctly update the text when tab size is changed in the preferences
- editor content is reloaded automatically if file is modified by an external editor (only when editor window is reactivated)

Posted on 05/28/05
- statistics are cleared after successful transmission
- removed default Interpreter/Debugger input text
- personal info are sent and ID retrieved
- removed most break events in debugger (retained only the most useful)
- handle now version comparison with string like 1.0ea1 or 1.0b2
- fixed a bug which prevented the debugger tree to scroll automatically while stepping
- fixed a bug which prevented the runtime stats to be displayed in human readable format

Posted on 05/22/05
- refactored some classes into XJLibrary
- new update manager
- new preference: statistics report
- new preference: update manager

Posted on 05/19/05
- select interpreter tab when running the interpreter
- select debugger tab when running the debugger
- new preference to change the look and feel of the GUI
- first implementation of statistics (private menu)

Posted on 05/19/05
- changed short-cuts for hiding action to Command-Minus (and with shift to hide/show all)
- changed short-cuts for interpreter and debugger
- improved speed of debugger when stepping forward (not reset)
 
Posted on 05/19/05
- new editor font and size preferences
- new compiler preferences (javac or jikes)
- changed the default font of the editor to "Courier New" (better appearance on Windows)
- removed ANTLR 3 path from Build & Debug dialog box: it is taken from the current class path
- redirected the output of the compiler and launcher to ANTLRWorks standard err/output device

- fixed a bug were the syntax diagram would not be updated on Mac OS 10.4, Linux and Windows (validate)
- fixed a bug which would prevent drag and drop of rules to work under Windows/Linux
- fixed a bug which would prevent ANTLRWorks to correctly compile under Windows
- fixed a bug which would prevent ANTLRWorks to correctly launch the remote parser under Windows
- fixed a bug which would prevent undo/redo to work under Windows/Linux (permanent focus owner)

Posted on 05/16/05
- user can now disable automatic optimization of NFA

05/15/05
- preferences panel: startup action and tab width
- interpreter fetches the plain text representation only when running, not at each keystroke

05/14/05
- do not center the editor window at creation (Tiger compatibility)

05/13/05
- debugger location is now centered
- debugger input text displays now tokens if they are available (i.e. after a rewind)
- disable some menu items while the debugger is running
- XJLibrary now closes the first created document if it is untouched and another document is opened

05/12/05
- new tokens for (, ) and non white space characters -> they are now correctly colorized
- simple comment token was not created correctly when end of text was reached instead of new line
- disable GPathGroup timer when not visible (reduce CPU usage)

- Build & Debug: input text was correctly written but the remote parser was launched before ;-)
- removed icons in Find Usages tree view
- cancel/okButton OS compliant
- default document size is now related to the available screen size
- debugger tokens boxes can now be displayed

04/14/05
- rename

04/06/05
- improved interface
- all icons have been re-created (no more IntelliJ dependency)

- find usages
- local/remote debugger
- gutter: position of each rule
- gutter: toggle breakpoint

- goto previous and next breakpoint
- goto line or character

- expand all tree nodes after running the interpreter

- copy and cut now correctly copy any hidden action(s)
- fixed the problem where hidden actions were removed when applying syntax coloring

03/16/05
- correctly handle escape sequence in lexer
- fix a bug where complex comment would not be lexed if end of text reached
- improved syntax coloring speed and accuracy

03/10/05
- display now correctly multiple errors for the same rule
- improved display speed when selecting a rule in the list (using the thread sleep threshold)

03/08/05
- syntax colorization
- improved thread management when typing text (new latch method - wait that the user is not typing for a
  certain amount of time before computing in the background)
- if error paths exist, the enabled path is displayed by default automatically
- if a graph is not referenced by any error paths, it is removed from the GGroupPath
- fixed a bug where a non-existent link between two states would be added to a path

03/02/05
- save as image (jpg, png)
- threaded NFA/SD display
- threaded NFA/SD errors display
- cache display (using BufferedImage)
- auto-complete rules in editor
- drag-and-drop rule in list
- move up/down each rule with ctrl-up/ctrl-down
- hide all/show all action
- hide current action

02/07/05:
- added emacs key bindings (ctlr-b, f, p, n and k)

02/06/05:
- added show/hide (all) actions using JButton component to store the hidden
  action in its tooltip.